{"version":3,"file":"preload.js","mappings":"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","sources":["webpack://newton-athena-beta/webpack/universalModuleDefinition","webpack://newton-athena-beta/./src/constants/signals.ts","webpack://newton-athena-beta/external node-commonjs \"electron\"","webpack://newton-athena-beta/webpack/bootstrap","webpack://newton-athena-beta/webpack/runtime/define property getters","webpack://newton-athena-beta/webpack/runtime/hasOwnProperty shorthand","webpack://newton-athena-beta/webpack/runtime/make namespace object","webpack://newton-athena-beta/./src/main/preload.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, () => {\nreturn ","export const IPC_COMMUNICATION_SIGNALS = {\n  REQUEST_SCREEN_CAPTURE_PERMISSION: 'request-screen-capture-permission',\n  REQUEST_WEB_CAM_CAPTURE_PERMISSION: 'request-webcam-capture-permission',\n  REQUEST_FULL_SCREEN_PERMISSION: 'request-full-screen-permission',\n  GET_WEB_CAM_STREAM: 'get-webcam-stream',\n  GET_AUDIO_STREAM: 'get-audio-stream',\n  GET_SCREEN_STREAM: 'get-screen-stream',\n  START_WEB_CAM_RECORDING: 'start-webcam-recording',\n  STOP_WEB_CAM_RECORDING: 'stop-webcam-recording',\n  START_SCREEN_SHARE_RECORDING: 'start-screen-share-recording',\n  STOP_SCREEN_SHARE_RECORDING: 'stop-screen-share-recording',\n  START_WEB_CAM_SNAPSHOT: 'start-webcam-snapshot',\n  STOP_WEB_CAM_SNAPSHOT: 'stop-webcam-snapshot',\n  START_SCREEN_SHARE_SNAPSHOT: 'start-screen-share-snapshot',\n  STOP_SCREEN_SHARE_SNAPSHOT: 'stop-screen-share-snapshot',\n  BROWSER_WINDOWS_MESSAGE: 'browser-windows-message',\n  START_FULL_SCREEN: 'start-full-screen',\n  STOP_FULL_SCREEN: 'stop-full-screen',\n  START_WAKE_LOCK: 'start-wake-lock',\n  STOP_WAKE_LOCK: 'stop-wake-lock',\n  ENABLE_KIOSK_MODE: 'enable-kiosk-mode',\n  DISABLE_KIOSK_MODE: 'disable-kiosk-mode',\n  GET_KIOSK_MODE_STATE: 'get-kiosk-mode-state',\n  RESET_ENVIRONMENT: 'reset-environment',\n  GET_APP_VERSION: 'get-app-version',\n  CAPTURE_AND_SEND_SCREEN_SHARE_SNAPSHOT:\n    'capture-and-send-screen-share-snapshot',\n  FORCE_FOCUS: 'force-focus',\n  CAPTURE_AND_SEND_WEB_CAM_SNAPSHOT: 'capture-and-send-web-cam-snapshot',\n  GET_RUNNING_RESTRICTED_APPLICATIONS: 'get-running-restricted-applications',\n  KILLALL_RESTRICTED_APPLICATIONS_RELAUNCH_APP:\n    'killall-restricted-applications_relaunch_app',\n  LIST_RUNNING_APPLICATIONS: 'list-running-applications',\n  GET_USER_INFO: 'get-user-info',\n  DOWNLOAD_HEIMDALL: 'download-heimdall',\n  SEND_PROCTORED_LOG_TRANSPARENT_DATA_FOR_HEIMDALL:\n    'send-proctored-log-transparent-data-for-heimdall',\n  GOT_ALL_PERMISSIONS: 'got-all-permissions-given',\n\n  // Status Change events\n  WEB_CAM_PERMISSION_STATUS_CHANGED: 'webcam-recording-status-changed',\n  SCREEN_CAPTURE_PERMISSION_STATUS_CHANGED:\n    'screen-capture-recording-status-changed',\n  PAGE_FOCUS_CHANGED: 'page-focus-changed',\n  PAGE_VISIBILITY_CHANGED: 'page-visibility-changed',\n  PAGE_FULLSCREEN_CHANGED: 'page-fullscreen-changed',\n  WAKE_LOCK_CHANGED: 'wake-lock-changed',\n  KIOSK_MODE_CHANGED: 'kiosk-mode-changed',\n\n  // States events\n  GET_FULL_SCREEN_STATE: 'get-full-screen-state',\n  GET_WAKE_LOCK_STATE: 'get-wake-lock-state',\n  CHECK_SCREEN_SHARE_RECORDING_STARTED: 'check-screen-share-recording-started',\n  CHECK_WEB_CAM_RECORDING_STARTED: 'check-webcam-recording-started',\n  CHECK_HEIMDALL_INSTALLED: 'check-heimdall-installed',\n\n  STOP_PROCTORING: 'stop-proctoring',\n\n  ILLEGAL_KEYS_COMBINATION_DETECTED: 'illegal-keys-combination-detected',\n  ON_HEIMDALL_STATUS_CHANGE: 'on-heimdall-status-changed',\n  OPEN_HEIMDALL: 'open-heimdall',\n  DATA_UPLOAD_CONFIG: 'data-upload-config',\n  SEND_EXAM_MAPPING_DETAILS: 'send-exam-mapping-details',\n  OPEN_SIRI_SETTINGS: 'open-siri-settings',\n  CHECK_SIRI_ENABLED: 'check-siri-enabled',\n  RELAUNCH_APP: 'relaunch-app',\n  OPEN_SYSTEM_EVENTS_SETTINGS: 'open-system-events-settings',\n  CHECK_SYSTEM_EVENTS_ENABLED: 'check-system-events-enabled',\n  OPEN_SHUTDOWN_SETTINGS: 'open-shutdown-settings',\n  QUIT_APP: 'quit-app',\n};\n\nexport const IPC_MAIN_RENDER_COMMUNICATION_SIGNALS = {\n  START_SCREEN_SHARE_RECORDING: 'start-screen-share-recording',\n  STOP_SCREEN_SHARE_RECORDING: 'stop-screen-share-recording',\n  START_SCREEN_SHARE_SNAPSHOT: 'start-screen-share-snapshot',\n  STOP_SCREEN_SHARE_SNAPSHOT: 'stop-screen-share-snapshot',\n  START_WEB_CAM_RECORDING: 'start-webcam-recording',\n  STOP_WEB_CAM_RECORDING: 'stop-webcam-recording',\n  START_WEB_CAM_SNAPSHOT: 'start-webcam-snapshot',\n  STOP_WEB_CAM_SNAPSHOT: 'stop-webcam-snapshot',\n  GET_WEB_CAM_STREAM: 'get-webcam-stream',\n  SEND_MESSAGE_TO_MAIN: 'send-message-to-main',\n  CAPTURE_AND_SEND_SCREEN_SHARE_SNAPSHOT:\n    'capture-and-send-screen-share-snapshot',\n  CAPTURE_AND_SEND_WEB_CAM_SNAPSHOT: 'capture-and-send-web-cam-snapshot',\n\n  // stats events\n  CHECK_SCREEN_SHARE_RECORDING_STARTED: 'check-screen-share-recording-started',\n  CHECK_WEB_CAM_RECORDING_STARTED: 'check-webcam-recording-started',\n\n  // Status Change events\n  SCREEN_SHARE_PERMISSION_STATUS_CHANGED:\n    'screen-share-permission-status-changed',\n  WEB_CAM_PERMISSION_STATUS_CHANGED: 'webcam-permission-status-changed',\n\n  // update events\n  CHECK_FOR_UPDATES: 'check-for-updates',\n  UPDATE_DOWNLOADING_PROGRESS: 'update-downloading-progress',\n  UPDATE_ERROR_FAILED: 'update-error-failed',\n};\n","module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { IpcRendererEvent } from 'electron';\n\nconst { contextBridge, ipcRenderer } = require('electron');\nconst {\n  IPC_COMMUNICATION_SIGNALS,\n  IPC_MAIN_RENDER_COMMUNICATION_SIGNALS,\n} = require('../constants/signals');\n\nconst electronAPIs = {\n  isRunningInNewtonAthena: async () => {\n    return true;\n  },\n  getElectronAppVersion: async () => {\n    return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.GET_APP_VERSION);\n  },\n  checkIsHeimdallInstalled: async () => {\n    return ipcRenderer.invoke(\n      IPC_COMMUNICATION_SIGNALS.CHECK_HEIMDALL_INSTALLED,\n    );\n  },\n  permissions: {\n    async requestScreenCapturePermission() {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.REQUEST_SCREEN_CAPTURE_PERMISSION,\n      );\n    },\n    async requestWebcamCapturePermission() {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.REQUEST_WEB_CAM_CAPTURE_PERMISSION,\n      );\n    },\n    async requestFullScreenPermission() {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.REQUEST_FULL_SCREEN_PERMISSION,\n      );\n    },\n  },\n  streams: {\n    async getWebcamStream() {\n      const data = await ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.GET_WEB_CAM_STREAM,\n      );\n      return data;\n    },\n    async getAudioStream() {\n      return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.GET_AUDIO_STREAM);\n    },\n    async getScreenStream() {\n      return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.GET_SCREEN_STREAM);\n    },\n  },\n  actions: {\n    async restEnvironment() {\n      return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.RESET_ENVIRONMENT);\n    },\n    async startWebCamRecording() {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.START_WEB_CAM_RECORDING,\n      );\n    },\n    async stopWebCamRecording() {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.STOP_WEB_CAM_RECORDING,\n      );\n    },\n    async startScreenShareRecording(streamId: string) {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.START_SCREEN_SHARE_RECORDING,\n        streamId,\n      );\n    },\n    async stopScreenShareRecording() {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.STOP_SCREEN_SHARE_RECORDING,\n      );\n    },\n    async startWebCamSnapshot(config: any) {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.START_WEB_CAM_SNAPSHOT,\n        config,\n      );\n    },\n    async stopWebCamSnapshot() {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.STOP_WEB_CAM_SNAPSHOT,\n      );\n    },\n    async startScreenShareSnapshot(config: any) {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.START_SCREEN_SHARE_SNAPSHOT,\n        config,\n      );\n    },\n    async stopScreenShareSnapshot() {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.STOP_SCREEN_SHARE_SNAPSHOT,\n      );\n    },\n    async startFullScreen() {\n      return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.START_FULL_SCREEN);\n    },\n    async stopFullScreen() {\n      return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.STOP_FULL_SCREEN);\n    },\n    async startWakeLock() {\n      return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.START_WAKE_LOCK);\n    },\n    async stopWakeLock(id: number) {\n      return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.STOP_WAKE_LOCK, id);\n    },\n    async stopProctoring() {\n      return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.STOP_PROCTORING);\n    },\n    async sendExamMappingDetails(data: Object) {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.SEND_EXAM_MAPPING_DETAILS,\n        data,\n      );\n    },\n    async enableKioskMode() {\n      return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.ENABLE_KIOSK_MODE);\n    },\n    async disableKioskMode() {\n      return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.DISABLE_KIOSK_MODE);\n    },\n    async captureAndSendSnapshot(snapshotConfig: any) {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.CAPTURE_AND_SEND_SCREEN_SHARE_SNAPSHOT,\n        snapshotConfig,\n      );\n    },\n    async captureAndSendWebCamSnapshot(snapshotConfig: any) {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.CAPTURE_AND_SEND_WEB_CAM_SNAPSHOT,\n        snapshotConfig,\n      );\n    },\n    async forceFocus() {\n      return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.FORCE_FOCUS);\n    },\n    openShutdownSettings() {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.OPEN_SHUTDOWN_SETTINGS,\n      );\n    },\n    killUserLaunchedApplicationsAndRelaunchApp() {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.KILLALL_RESTRICTED_APPLICATIONS_RELAUNCH_APP,\n      );\n    },\n    listRunningApplications() {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.LIST_RUNNING_APPLICATIONS,\n      );\n    },\n    onHeimdallStatusChange: (callback: any) => {\n      ipcRenderer.on(\n        IPC_COMMUNICATION_SIGNALS.ON_HEIMDALL_STATUS_CHANGE,\n        (_event, status) => callback(status),\n      );\n    },\n    openHeimdall: () =>\n      ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.OPEN_HEIMDALL),\n\n    sendFileUploadConfig: (data: { [key: string]: any }) => {\n      ipcRenderer.send(IPC_COMMUNICATION_SIGNALS.DATA_UPLOAD_CONFIG, data);\n    },\n    downloadHeimdall: async (url: string) => {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.DOWNLOAD_HEIMDALL,\n        url,\n      );\n    },\n    sendProctoredLogTransportDataForHeimdall: (data: any) =>\n      ipcRenderer.send(\n        IPC_COMMUNICATION_SIGNALS.SEND_PROCTORED_LOG_TRANSPARENT_DATA_FOR_HEIMDALL,\n        data,\n      ),\n    openSiriSettings: () =>\n      ipcRenderer.send(IPC_COMMUNICATION_SIGNALS.OPEN_SIRI_SETTINGS),\n    openSystemEventsSettings: () =>\n      ipcRenderer.send(IPC_COMMUNICATION_SIGNALS.OPEN_SYSTEM_EVENTS_SETTINGS),\n    async relaunchApp() {\n      return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.RELAUNCH_APP);\n    },\n    gotAllPermissions(flag: boolean) {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.GOT_ALL_PERMISSIONS,\n        flag,\n      );\n    },\n    quitApp() {\n      return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.QUIT_APP);\n    },\n  },\n\n  states: {\n    async isFullScreen() {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.GET_FULL_SCREEN_STATE,\n      );\n    },\n    async isWakeLock() {\n      return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.GET_WAKE_LOCK_STATE);\n    },\n    async isScreenShareRecordingStarted(id: string) {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.CHECK_SCREEN_SHARE_RECORDING_STARTED,\n        id,\n      );\n    },\n    async isWebCamRecordingStarted(id: string) {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.CHECK_WEB_CAM_RECORDING_STARTED,\n        id,\n      );\n    },\n    async getKioskModeState() {\n      return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.GET_KIOSK_MODE_STATE);\n    },\n    async getRunningRestrictedApplications() {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.GET_RUNNING_RESTRICTED_APPLICATIONS,\n      );\n    },\n    async isSiriEnabled() {\n      return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.CHECK_SIRI_ENABLED);\n    },\n    async isSystemEventsEnabled() {\n      return ipcRenderer.invoke(\n        IPC_COMMUNICATION_SIGNALS.CHECK_SYSTEM_EVENTS_ENABLED,\n      );\n    },\n  },\n  listener: {\n    async webCamSnapshotRecordingStatusChanged(\n      webCamId: string,\n      handler: (arg0: any) => void,\n    ) {\n      const signal =\n        IPC_COMMUNICATION_SIGNALS.WEB_CAM_PERMISSION_STATUS_CHANGED;\n      ipcRenderer.on(signal, (event, data) => {\n        handler(data);\n      });\n      return signal;\n    },\n    async screenSharePermissionChanged(\n      screenID: string,\n      handler: (arg0: any) => void,\n    ) {\n      const signal =\n        IPC_COMMUNICATION_SIGNALS.SCREEN_SHARE_PERMISSION_STATUS_CHANGED;\n      ipcRenderer.on(signal, (event, data) => handler(data));\n      return signal;\n    },\n    async screenShareRecordingStatusChanged(\n      screenID: string,\n      handler: (arg0: any) => void,\n    ) {\n      const signal =\n        IPC_COMMUNICATION_SIGNALS.SCREEN_CAPTURE_PERMISSION_STATUS_CHANGED;\n      ipcRenderer.on(signal, (event, data) => handler(data));\n      return signal;\n    },\n    async isPageFocusedChanged(handler: (isPageFocused: boolean) => void) {\n      const signal = IPC_COMMUNICATION_SIGNALS.PAGE_FOCUS_CHANGED;\n      ipcRenderer.on(signal, (event, data) => handler(data));\n      return signal;\n    },\n    async isPageVisibilityChanged(handler: (isPageVisible: boolean) => void) {\n      const signal = IPC_COMMUNICATION_SIGNALS.PAGE_VISIBILITY_CHANGED;\n      ipcRenderer.on(signal, (event, data) => handler(data));\n      return signal;\n    },\n    async isFullScreenChanged(handler: (isFullScreen: boolean) => void) {\n      const signal = IPC_COMMUNICATION_SIGNALS.PAGE_FULLSCREEN_CHANGED;\n      ipcRenderer.on(signal, (event, data) => {\n        handler(data);\n      });\n      return IPC_COMMUNICATION_SIGNALS.PAGE_FULLSCREEN_CHANGED;\n    },\n    async removeListener(signal: string, handler: (...args: any[]) => void) {\n      return () => ipcRenderer.removeListener(signal, handler);\n    },\n    async illegalKeysCombinationDetected(handler: (data: any) => void) {\n      const signal =\n        IPC_COMMUNICATION_SIGNALS.ILLEGAL_KEYS_COMBINATION_DETECTED;\n      const eventHandler = (event: IpcRendererEvent, data: any) =>\n        handler(data);\n      ipcRenderer.on(signal, eventHandler);\n      return () => ipcRenderer.removeListener(signal, eventHandler);\n    },\n    async kioskModeChanged(handler: (isKioskModeEnabled: boolean) => void) {\n      const signal = IPC_COMMUNICATION_SIGNALS.KIOSK_MODE_CHANGED;\n      ipcRenderer.on(signal, (event, data) => handler(data));\n      return signal;\n    },\n  },\n  network: {\n    getUserInfo() {\n      return ipcRenderer.invoke(IPC_COMMUNICATION_SIGNALS.GET_USER_INFO);\n    },\n  },\n};\n\nconst electronRendererAPI = {\n  onStartScreenShareRecording: (callback: any) => {\n    const listenerFunction = async (_event: IpcRendererEvent, message: any) => {\n      const { messageID, data } = message;\n      const response = await callback(data);\n      electronRendererAPI.sendMessageToMain({ data: response, messageID });\n    };\n    ipcRenderer.on(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.START_SCREEN_SHARE_RECORDING,\n      listenerFunction,\n    );\n    return () => {\n      ipcRenderer.removeListener(\n        IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.START_SCREEN_SHARE_RECORDING,\n        listenerFunction,\n      );\n    };\n  },\n  onStopScreenShareRecording: (callback: any) => {\n    const listenerFunction = async (_event: IpcRendererEvent, message: any) => {\n      const { messageID, data } = message;\n      const response = await callback(data);\n      electronRendererAPI.sendMessageToMain({ data: response, messageID });\n    };\n    ipcRenderer.on(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.STOP_SCREEN_SHARE_RECORDING,\n      listenerFunction,\n    );\n    return () =>\n      ipcRenderer.removeListener(\n        IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.STOP_SCREEN_SHARE_RECORDING,\n        listenerFunction,\n      );\n  },\n  onStartScreenShareSnapshot: (callback: any) => {\n    const listenerFunction = async (_event: IpcRendererEvent, message: any) => {\n      const { messageID, data } = message;\n      const response = await callback(data);\n      electronRendererAPI.sendMessageToMain({ data: response, messageID });\n    };\n    ipcRenderer.on(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.START_SCREEN_SHARE_SNAPSHOT,\n      listenerFunction,\n    );\n    return () =>\n      ipcRenderer.removeListener(\n        IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.START_SCREEN_SHARE_SNAPSHOT,\n        listenerFunction,\n      );\n  },\n  onStopScreenSnapshot: (callback: any) => {\n    const listenerFunction = async (_event: IpcRendererEvent, message: any) => {\n      const { messageID, data } = message;\n      const response = await callback(data);\n      electronRendererAPI.sendMessageToMain({ data: response, messageID });\n    };\n    ipcRenderer.on(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.STOP_SCREEN_SHARE_SNAPSHOT,\n      listenerFunction,\n    );\n    return () =>\n      ipcRenderer.removeListener(\n        IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.STOP_SCREEN_SHARE_SNAPSHOT,\n        listenerFunction,\n      );\n  },\n  onCaptureAndSendScreenShareSnapshot: (callback: any) => {\n    const listenerFunction = async (_event: IpcRendererEvent, message: any) => {\n      const { messageID, data } = message;\n      const response = await callback(data);\n      electronRendererAPI.sendMessageToMain({ data: response, messageID });\n    };\n    ipcRenderer.on(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.CAPTURE_AND_SEND_SCREEN_SHARE_SNAPSHOT,\n      listenerFunction,\n    );\n    return () =>\n      ipcRenderer.removeListener(\n        IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.CAPTURE_AND_SEND_SCREEN_SHARE_SNAPSHOT,\n        listenerFunction,\n      );\n  },\n  onCheckScreenSharePermissionGranted: (callback: any) => {\n    const listenerFunction = async (_event: IpcRendererEvent, message: any) => {\n      const { messageID, data } = message;\n      const response = await callback(data);\n      electronRendererAPI.sendMessageToMain({ data: response, messageID });\n    };\n    ipcRenderer.on(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.CHECK_SCREEN_SHARE_RECORDING_STARTED,\n      listenerFunction,\n    );\n    return () =>\n      ipcRenderer.removeListener(\n        IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.CHECK_SCREEN_SHARE_RECORDING_STARTED,\n        listenerFunction,\n      );\n  },\n  onScreenSharePermissionChanged: (screenShareStatus: boolean) => {\n    ipcRenderer.send(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.SCREEN_SHARE_PERMISSION_STATUS_CHANGED,\n      screenShareStatus,\n    );\n  },\n\n  onStartWebCamRecording: (callback: any) => {\n    const listenerFunction = async (_event: IpcRendererEvent, message: any) => {\n      const { messageID, data } = message;\n      const response = await callback(data);\n      electronRendererAPI.sendMessageToMain({ data: response, messageID });\n    };\n    ipcRenderer.on(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.START_WEB_CAM_RECORDING,\n      listenerFunction,\n    );\n    return () => {\n      ipcRenderer.removeListener(\n        IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.START_WEB_CAM_RECORDING,\n        listenerFunction,\n      );\n    };\n  },\n  onStopWebCamRecording: (callback: any) => {\n    const listenerFunction = async (_event: IpcRendererEvent, message: any) => {\n      const { messageID, data } = message;\n      const response = await callback(data);\n      electronRendererAPI.sendMessageToMain({ data: response, messageID });\n    };\n    ipcRenderer.on(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.STOP_WEB_CAM_RECORDING,\n      listenerFunction,\n    );\n    return () => {\n      ipcRenderer.removeListener(\n        IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.STOP_WEB_CAM_RECORDING,\n        listenerFunction,\n      );\n    };\n  },\n  onStartWebCamSnapshot: (callback: any) => {\n    async function listenerFunction(_event: IpcRendererEvent, message: any) {\n      const { messageID, data } = message;\n      const response = await callback(data);\n      electronRendererAPI.sendMessageToMain({ data: response, messageID });\n    }\n\n    ipcRenderer.on(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.START_WEB_CAM_SNAPSHOT,\n      listenerFunction,\n    );\n    return () => {\n      ipcRenderer.removeListener(\n        IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.START_WEB_CAM_SNAPSHOT,\n        listenerFunction,\n      );\n    };\n  },\n  onStopWebCamSnapshot: (callback: any) => {\n    const listenerFunction = async (_event: IpcRendererEvent, message: any) => {\n      const { messageID, data } = message;\n      const response = await callback(data);\n      electronRendererAPI.sendMessageToMain({ data: response, messageID });\n    };\n    ipcRenderer.on(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.STOP_WEB_CAM_SNAPSHOT,\n      listenerFunction,\n    );\n    return () => {\n      ipcRenderer.removeListener(\n        IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.STOP_WEB_CAM_SNAPSHOT,\n        listenerFunction,\n      );\n    };\n  },\n  onCaptureAndSendWebCamSnapshot: (callback: any) => {\n    const listenerFunction = async (_event: IpcRendererEvent, message: any) => {\n      const { messageID, data } = message;\n      const response = await callback(data);\n      electronRendererAPI.sendMessageToMain({ data: response, messageID });\n    };\n    ipcRenderer.on(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.CAPTURE_AND_SEND_WEB_CAM_SNAPSHOT,\n      listenerFunction,\n    );\n    return () =>\n      ipcRenderer.removeListener(\n        IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.CAPTURE_AND_SEND_WEB_CAM_SNAPSHOT,\n        listenerFunction,\n      );\n  },\n\n  onGetWebCamStream: (callback: any) => {\n    const listenerFunction = async (_event: IpcRendererEvent, message: any) => {\n      const { messageID, data } = message;\n      const response = await callback(data);\n      electronRendererAPI.sendMessageToMain({ data: response, messageID });\n    };\n    ipcRenderer.on(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.GET_WEB_CAM_STREAM,\n      listenerFunction,\n    );\n    return () =>\n      ipcRenderer.removeListener(\n        IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.GET_WEB_CAM_STREAM,\n        listenerFunction,\n      );\n  },\n  onCheckWebCamRecordingStarted: (callback: any) => {\n    const listenerFunction = async (_event: IpcRendererEvent, message: any) => {\n      const { messageID, data } = message;\n      const response = await callback(data);\n      electronRendererAPI.sendMessageToMain({ data: response, messageID });\n    };\n    ipcRenderer.on(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.CHECK_WEB_CAM_RECORDING_STARTED,\n      listenerFunction,\n    );\n    return () =>\n      ipcRenderer.removeListener(\n        IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.CHECK_WEB_CAM_RECORDING_STARTED,\n        listenerFunction,\n      );\n  },\n  onWebCamPermissionStatusChanged: (webCamStatus: boolean) => {\n    ipcRenderer.send(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.WEB_CAM_PERMISSION_STATUS_CHANGED,\n      webCamStatus,\n    );\n  },\n\n  sendMessageToMain: (message: any) => {\n    ipcRenderer.send(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.SEND_MESSAGE_TO_MAIN,\n      message,\n    );\n  },\n  checkForUpdates: async () => {\n    const response = await ipcRenderer.invoke(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.CHECK_FOR_UPDATES,\n    );\n    return response;\n  },\n  onUpdateDownloadingProgress: (callback: any) => {\n    const listenerFunction = (event: IpcRendererEvent, data: any) => {\n      callback(data);\n    };\n    ipcRenderer.on(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.UPDATE_DOWNLOADING_PROGRESS,\n      listenerFunction,\n    );\n    return () =>\n      ipcRenderer.removeListener(\n        IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.UPDATE_DOWNLOADING_PROGRESS,\n        listenerFunction,\n      );\n  },\n  onUpdateError: (callback: any) => {\n    const listenerFunction = async (_event: IpcRendererEvent, message: any) => {\n      const { messageID, data } = message;\n      const response = await callback(data);\n      electronRendererAPI.sendMessageToMain({ data: response, messageID });\n    };\n    ipcRenderer.on(\n      IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.UPDATE_ERROR_FAILED,\n      listenerFunction,\n    );\n    return () =>\n      ipcRenderer.removeListener(\n        IPC_MAIN_RENDER_COMMUNICATION_SIGNALS.UPDATE_ERROR_FAILED,\n        listenerFunction,\n      );\n  },\n};\n\ncontextBridge.exposeInMainWorld('electron', electronAPIs);\ncontextBridge.exposeInMainWorld('electronRendererAPI', electronRendererAPI);\n\nexport type ElectronHandler = typeof electronAPIs;\nexport type ElectronRendererHandler = typeof electronRendererAPI;\n"],"names":["root","factory","exports","module","define","amd","a","i","global","IPC_COMMUNICATION_SIGNALS","REQUEST_SCREEN_CAPTURE_PERMISSION","REQUEST_WEB_CAM_CAPTURE_PERMISSION","REQUEST_FULL_SCREEN_PERMISSION","GET_WEB_CAM_STREAM","GET_AUDIO_STREAM","GET_SCREEN_STREAM","START_WEB_CAM_RECORDING","STOP_WEB_CAM_RECORDING","START_SCREEN_SHARE_RECORDING","STOP_SCREEN_SHARE_RECORDING","START_WEB_CAM_SNAPSHOT","STOP_WEB_CAM_SNAPSHOT","START_SCREEN_SHARE_SNAPSHOT","STOP_SCREEN_SHARE_SNAPSHOT","BROWSER_WINDOWS_MESSAGE","START_FULL_SCREEN","STOP_FULL_SCREEN","START_WAKE_LOCK","STOP_WAKE_LOCK","ENABLE_KIOSK_MODE","DISABLE_KIOSK_MODE","GET_KIOSK_MODE_STATE","RESET_ENVIRONMENT","GET_APP_VERSION","CAPTURE_AND_SEND_SCREEN_SHARE_SNAPSHOT","FORCE_FOCUS","CAPTURE_AND_SEND_WEB_CAM_SNAPSHOT","GET_RUNNING_RESTRICTED_APPLICATIONS","KILLALL_RESTRICTED_APPLICATIONS_RELAUNCH_APP","LIST_RUNNING_APPLICATIONS","GET_USER_INFO","DOWNLOAD_HEIMDALL","SEND_PROCTORED_LOG_TRANSPARENT_DATA_FOR_HEIMDALL","GOT_ALL_PERMISSIONS","WEB_CAM_PERMISSION_STATUS_CHANGED","SCREEN_CAPTURE_PERMISSION_STATUS_CHANGED","PAGE_FOCUS_CHANGED","PAGE_VISIBILITY_CHANGED","PAGE_FULLSCREEN_CHANGED","WAKE_LOCK_CHANGED","KIOSK_MODE_CHANGED","GET_FULL_SCREEN_STATE","GET_WAKE_LOCK_STATE","CHECK_SCREEN_SHARE_RECORDING_STARTED","CHECK_WEB_CAM_RECORDING_STARTED","CHECK_HEIMDALL_INSTALLED","STOP_PROCTORING","ILLEGAL_KEYS_COMBINATION_DETECTED","ON_HEIMDALL_STATUS_CHANGE","OPEN_HEIMDALL","DATA_UPLOAD_CONFIG","SEND_EXAM_MAPPING_DETAILS","OPEN_SIRI_SETTINGS","CHECK_SIRI_ENABLED","RELAUNCH_APP","OPEN_SYSTEM_EVENTS_SETTINGS","CHECK_SYSTEM_EVENTS_ENABLED","OPEN_SHUTDOWN_SETTINGS","QUIT_APP","IPC_MAIN_RENDER_COMMUNICATION_SIGNALS","SEND_MESSAGE_TO_MAIN","SCREEN_SHARE_PERMISSION_STATUS_CHANGED","CHECK_FOR_UPDATES","UPDATE_DOWNLOADING_PROGRESS","UPDATE_ERROR_FAILED","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","contextBridge","ipcRenderer","electronAPIs","isRunningInNewtonAthena","async","getElectronAppVersion","invoke","checkIsHeimdallInstalled","permissions","streams","actions","streamId","config","id","data","snapshotConfig","openShutdownSettings","killUserLaunchedApplicationsAndRelaunchApp","listRunningApplications","onHeimdallStatusChange","callback","on","_event","status","openHeimdall","sendFileUploadConfig","send","downloadHeimdall","url","sendProctoredLogTransportDataForHeimdall","openSiriSettings","openSystemEventsSettings","gotAllPermissions","flag","quitApp","states","listener","webCamId","handler","signal","event","screenID","removeListener","eventHandler","network","getUserInfo","electronRendererAPI","onStartScreenShareRecording","listenerFunction","message","messageID","response","sendMessageToMain","onStopScreenShareRecording","onStartScreenShareSnapshot","onStopScreenSnapshot","onCaptureAndSendScreenShareSnapshot","onCheckScreenSharePermissionGranted","onScreenSharePermissionChanged","screenShareStatus","onStartWebCamRecording","onStopWebCamRecording","onStartWebCamSnapshot","onStopWebCamSnapshot","onCaptureAndSendWebCamSnapshot","onGetWebCamStream","onCheckWebCamRecordingStarted","onWebCamPermissionStatusChanged","webCamStatus","checkForUpdates","onUpdateDownloadingProgress","onUpdateError","exposeInMainWorld"],"sourceRoot":""}